[{"code":"SENG 5115","subject":"SENG","id":"5115","title":"User Interface Design","info":"Design and evaluation of interactive application interfaces, user- and task-centered approaches to design, guidelines for graphical design, interface evaluation techniques, current interface trends, including web interfaces and information visualization. Group projects that include designing, prototyping, and implementing an application interface.","prereqInfo":"prereq: Grad SEng major","prereq":{"course":[]}},{"code":"SENG 5116","subject":"SENG","id":"5116","title":"GUI","info":"Toolkit-centered introduction to GUI implementation technology. Students learn to use a GUI toolkit to implement a graphical application. Introduction to advanced techniques, including constraint-based data management, 3D visualization tools, and toolkit structure and design.","prereqInfo":"prereq: Grad SEng major","prereq":{"course":[]}},{"code":"SENG 5130","subject":"SENG","id":"5130","title":"Internet of Things","info":"Project-based examples from modern \\\"Internet of Things\\\" (IoT) systems. Hands-on experiments with core wireless hardware, sensors, and software elements. Students will gain the practical system-level skills and understandings able to be applied to any IoT system, and walk away with an IoT project created themselves. There will be discussions and team-centric activities focused on market trends, ground-breaking tech and products, security, communication protocols, and exciting emerging technologies related to IoT including machine learning, artificial intelligence, and augmented reality.","prereqInfo":null,"prereq":{"course":[]}},{"code":"SENG 5131","subject":"SENG","id":"5131","title":"Distributed Application Design","info":"Java programming, concurrent programming, workflow, distributed database, security, collaborative computing, object-oriented architecture/design, network publishing, messaging architecture, distributed object computing, and intranet.","prereqInfo":"prereq: Grad SEng major","prereq":{"course":[]}},{"code":"SENG 5132","subject":"SENG","id":"5132","title":"Web Application Development","info":"This course is an in-depth discussion of the challenges and complexities involved in designing and implementing modern web applications. Students will gain experience designing and implementing a project during in the course of the semester. ","prereqInfo":null,"prereq":{"course":[]}},{"code":"SENG 5133","subject":"SENG","id":"5133","title":"Cloud Computing","info":"Today most organizations make use of the \\\"Cloud\\\" in some way and it is, understandably, changing the way we architect our systems. But there is confusion around cloud native, 12 factors, modular monoliths, serverless, etc. How does a busy technologist make sense of it all? In this course, using cloud computing as a lens, we will explore the broader impact of technology change. We discuss how a technology radar can help a technologist stay marketable as well as to help an organization stay informed of important changes in the technology landscape. Expected topics: Docker; Kubernetes; Google Kubernetes Engine, Amazon EKS, Amazon Fargate; Cloud Foundry; Functions as a service; Amazon Lambda, Google Cloud Functions, Azure. This course will consist of discussion, hands on assignments, papers, presentations, and use of sample applications.","prereqInfo":null,"prereq":{"course":[]}},{"code":"SENG 5199","subject":"SENG","id":"5199","title":"Topics in Software Engineering","info":"Topics specified in Class Schedule.","prereqInfo":"prereq: SEng grad student","prereq":{"course":[]}},{"code":"SENG 5271","subject":"SENG","id":"5271","title":"Cybersecurity","info":"This course introduces the major topics of cyber security. Class time will focus on demonstrations, exercises, mini-projects, and discussions. Topics include authentication, access control, file system forensics, symmetric and asymmetric cryptography, network monitoring and controls, dynamic web site attacks, and network cryptography. ","prereqInfo":null,"prereq":{"course":[]}},{"code":"SENG 5511","subject":"SENG","id":"5511","title":"Artific Intellig","info":"Introduces ideas and theories of AI. Problem solving, search, inference techniques. Logic and theorem proving. Knowledge representation, rules, frames, semantic networks. Planning and scheduling. Introduces Lisp programming language.","prereqInfo":"prereq: Grad SEng major","prereq":{"course":[]}},{"code":"SENG 5551","subject":"SENG","id":"5551","title":"Robotics","info":"Transformations, kinematics and inverse kinematics, dynamics, and control. Sensing (robot vision, force control, tactile sensing), applications of sensor-based robot control, robot programming, mobile robotics, and micro-robotics.","prereqInfo":"prereq: Grad SEng major","prereq":{"course":[]}},{"code":"SENG 5707","subject":"SENG","id":"5707","title":"Data Modeling","info":"Fundamental concepts; representing instances; prototypic model shapes; model evolution; interviewing user skills, reverse engineering; mapping to DBMS schema; database querying.","prereqInfo":"prereq: Grad SEng major","prereq":{"course":[]}},{"code":"SENG 5708","subject":"SENG","id":"5708","title":"Advanced Database Management","info":"Applications/motivation. Extended relational, object-relational, and object-oriented data models. Object identifier, types/constructors. Versions, schema evolution. Query language (e.g., recursion, path expressions). Object indices, buffer management, and other implementation issues. Triggers, rules, complex objects, and case studies.","prereqInfo":"prereq: Grad SEng major","prereq":{"course":[]}},{"code":"SENG 5709","subject":"SENG","id":"5709","title":"Big Data Engineering Analytics","info":"This course aims to teach students how to evaluate and engineer solutions that traditional data systems cannot handle, as well as various real-world use cases related to big data problems. This course will integrate theory and hands-on learning of various big data systems like NoSQL, streaming architectures, along with popular industry tools for scalable analytics. The focus of the course is largely around big data engineering, with some coverage of data science and analytics.","prereqInfo":null,"prereq":{"course":[]}},{"code":"SENG 5801","subject":"SENG","id":"5801","title":"Software Engr 1","info":"Software engineering as a discipline. Preview of topics to be covered in subsequent courses in master of science in software engineering program; in-depth study  of requirements engineering; modeling techniques applicable to requirements and specification, including UML and formal modeling.","prereqInfo":"prereq: Grad SEng major","prereq":{"course":[]}},{"code":"SENG 5802","subject":"SENG","id":"5802","title":"Software Engr 2","info":"Software design quality, processes that produce quality design, graphical and textual representations, including UML, common problems and patterns that solve them, refactoring. Students develop fluency in object-oriented design, and ability to read, critique, and advocate design ideas. Students work in teams to complete a multiphase project.","prereqInfo":"prereq: Grad SEng major","prereq":{"course":[]}},{"code":"SENG 5811","subject":"SENG","id":"5811","title":"Software Testing/Verification","info":"Theoretical/practical aspects of testing software. Analyzing a requirements document for test conditions. Writing a test plan. Designing, creating, and executing test cases. Recording defects. Writing a test report.","prereqInfo":"prereq: 5801, grad SEng major","prereq":{"course":[{"code":"SENG 5801","subject":"SENG","id":"5801"}]}},{"code":"SENG 5831","subject":"SENG","id":"5831","title":"Software Dev RealT","info":"Analysis, design, verification, and validation of real-time systems. Periodic, aperiodic, and sporadic processes, scheduling theory. Pragmatic issues.","prereqInfo":"prereq: Grad SEng major","prereq":{"course":[]}},{"code":"SENG 5841","subject":"SENG","id":"5841","title":"Model-Based Development","info":"Formal specification of software artifacts. Applicability of formal specifications. Methods such as Z, SCR, and Satecharts. Formal analysis. Theorem proving. Reachability analysis. Model checking. Tools such as PVS, Statemate, SPIN, and SMV.","prereqInfo":"prereq: Grad SEng major","prereq":{"course":[]}},{"code":"SENG 5851","subject":"SENG","id":"5851","title":"Software Proj Mgmt","info":"Concepts used to manage software projects. Project management cycle: initiation, planning/control, status reporting, review, post-project analysis. Leadership and motivation strategies. Lecture, discussion, individual/team presentations/projects.","prereqInfo":"prereq: Grad SEng major","prereq":{"course":[]}},{"code":"SENG 5852","subject":"SENG","id":"5852","title":"Quality Assurance","info":"Theory and application of capability maturity model: process assessment, modeling, and improvement techniques. Life cycle issues related to development and maintenance; quality, safety, and security assurance; project management; and automated support environments. Group projects and case studies.","prereqInfo":"prereq: Grad SEng major","prereq":{"course":[]}},{"code":"SENG 5861","subject":"SENG","id":"5861","title":"Software Architecture","info":"Software/systems architecture. Representation/design, how they fit into software engineering process. Description of architectures, including representation and quality attributes.","prereqInfo":"prereq: 2nd year, MSSE grad student","prereq":{"course":[]}},{"code":"SENG 5899","subject":"SENG","id":"5899","title":"Software Engineering Seminar","info":"Software engineering trends. Talks by invited speakers, selected readings.","prereqInfo":"prereq: Grad SEng major, instr consent","prereq":{"course":[]}},{"code":"SENG 5900","subject":"SENG","id":"5900","title":"Directed Study","info":"Directed study/research in software engineering. Topics/scope decided in collaboration with instructor.","prereqInfo":null,"prereq":{"course":[]}},{"code":"SENG 8333","subject":"SENG","id":"8333","title":"FTE: Master's","info":"(No description)","prereqInfo":"prereq: Master's student, adviser and DGS consent","prereq":{"course":[]}},{"code":"SENG 8494","subject":"SENG","id":"8494","title":"Capstone Project","info":"Students work in teams on software project using tools, techniques, and skills acquired during previous coursework. Each team works with a client to establish requirements, agree upon design, and achieve a successful acceptance test of resulting software system.","prereqInfo":"prereq: SEng major","prereq":{"course":[]}},{"code":"SENG 8891","subject":"SENG","id":"8891","title":"Independent Project","info":"Independent project arranged with faculty.","prereqInfo":null,"prereq":{"course":[]}}]